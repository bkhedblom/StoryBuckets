@inject ISortingBucketsViewModel vm
@using StoryBuckets.Client.Components.BucketWrapper
<div class="row justify-content-center mt-5 pt-5">
    <div hidden=@vm.StoryHidden class="card col-7">
        <div class="card-body">
            <h4 class="card-header">
                @vm.TextForNextStoryToSort
                <a class="symbol-btn float-right" title="Mark as irrelevant" @onclick="vm.OnClickSetIrrelevant">✖</a>
            </h4>
        </div>
    </div>
    <p hidden=@vm.AllDoneHidden class="alert alert-success col">
        All done!
    </p>
    <p hidden="@vm.LoaderHidden" class="alert alert-light col">
        Loading...
        If you can read this, something might've gone wrong...
    </p>
</div>
    <div class="row justify-content-center mt-5 pt-5 buckets">
@if (!vm.BucketsHidden)
{
        <div class="col">
            <button class="btn btn-outline-dark symbol-btn add-button" title="Create a new bucket" @onclick="vm.OnClickCreateSmallestBucket">+</button>
        </div>
        @foreach (var bucket in vm.Buckets)
        {
            <div class="col">
                <BucketWrapper Bucket="@bucket" OnChosen="vm.OnBucketChosen" DisableChoosing="vm.DisableBucketChoosing" OnCreateBiggerBucket="vm.OnCreateBiggerBucket"/>
            </div>
        }
}
    </div>

@code {
    protected override async Task OnInitializedAsync()
        => await vm.OnInitializedAsync();
}